{"version":3,"sources":["lcs/Square.jsx","lcs/memo.jsx","lcs/form.jsx","REM/Square.jsx","REM/memo.jsx","REM/form.jsx","Ed/Square.jsx","Ed/memo.jsx","Ed/form.jsx","multiform.jsx","index.jsx"],"names":["Lcs_Square","props","typer","id","this","row","col","typey","color","fontWeight","className","style","val","React","Component","Lcs_Memo","getInitialGrid","gridy","string_1","length","currentRow","string_2","push","createNode","state","num_rows","num_cols","memo","create_memo","grid","speed","visualizing","update_speed","bind","increment","lag","console","log","counter","setState","i","k","setTimeout","document","getElementById","memo1","r","Array","fill","c","Math","max","e","preventDefault","target","value","compy","marginLeft","onChange","onClick","animateDijkstra","marginTop","reseter","map","rowIdx","node","nodeIdx","rower","type","String","height","width","float","class","lcs_Form","submitted","change_handler1","change_handler2","handle_submit","event","fontSize","onSubmit","name","Rem_Square","Rem_Memo","size","Rem_Form","Ed_Square","Ed_Memo","min","Ed_Form","Multiform","algorithm","href","ReactDOM","render"],"mappings":"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","file":"static/js/main.5af8ef40.chunk.js","sourcesContent":["import React from 'react';\nclass Lcs_Square extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let typer;\n        let id = `node-${this.props.row}-${this.props.col}`\n        if(this.props.typey==='show'){\n            typer={color:'black'};\n        }\n        else if(this.props.typey==='show_string'){\n            typer={color:'black',fontWeight:'bold'};\n        }\n        else{\n            typer={color:'white',};\n        }\n        return (\n            <div id={id} className='node' style={typer}> {this.props.val} </div>\n        )\n    }\n}\n\nexport default Lcs_Square;","import React from 'react';\nimport Lcs_Square from './Square'\nclass Lcs_Memo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            num_rows:this.props.string_1.length+2,\n            num_cols:this.props.string_2.length+2,\n            memo:this.create_memo(),\n            grid:this.getInitialGrid(),\n            speed:'slow',\n            visualizing:false,\n        }\n        this.update_speed=this.update_speed.bind(this);\n    }\n\n    animateDijkstra() {\n        var increment=800;\n        var lag=550;\n        console.log(this.state.speed)\n        if(this.state.speed==='slow'){\n          console.log('slow')\n        }\n        else if(this.state.speed==='medium'){\n          increment=500;\n          lag=275;\n        }\n        else if(this.state.speed==='fast'){\n          increment=350;\n          lag=120;\n        }\n        console.log('increment ',increment,' lag ',lag)\n        let counter=1;\n        this.setState({visualizing:true});\n        for (let i = 2; i < this.state.grid.length; i++) {\n          for(let k=2;k<this.state.grid[0].length;k++){\n            \n            if(this.props.string_1[i-2]==this.props.string_2[k-2]){\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node node-dev';\n                    document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                    document.getElementById(`node-${0}-${k}`).className ='node node-prev';\n                    document.getElementById(`node-${i}-${0}`).className ='node node-prev';\n                    document.getElementById('1234').className ='if_statement_1_alt';\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node';\n                    document.getElementById(`node-${0}-${k}`).className ='node';\n                    document.getElementById(`node-${i}-${0}`).className ='node';\n                    document.getElementById('1234').className ='if_statement_1';\n                }, (increment*counter + lag));\n                \n            }\n            else{\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                    document.getElementById(`node-${i-1}-${k}`).className ='node node-start';\n                    document.getElementById(`node-${i}-${k-1}`).className ='node node-start';\n                    document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                    document.getElementById('5678').className ='if_statement_2_alt';\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                    document.getElementById(`node-${i-1}-${k}`).className ='node';\n                    document.getElementById(`node-${i}-${k-1}`).className ='node';\n                    document.getElementById('5678').className ='if_statement_2';\n                }, (increment*counter + lag));\n                \n            }\n            if(k==this.state.grid[0].length-1 && i == this.state.grid.length-1){\n              setTimeout(()=>{this.setState({visualizing:false,speed:'slow'})},increment*counter + lag);\n            }\n            counter++;\n          }\n        }\n    }\n\n    getInitialGrid = () => {\n        const gridy = [];\n        for (let row = 0; row < this.props.string_1.length+2; row++) {\n          const currentRow = [];\n          for (let col = 0; col < this.props.string_2.length+2; col++) {\n            currentRow.push(this.createNode(col, row));\n          }\n          gridy.push(currentRow);\n        }\n        return gridy;\n    };\n      \n    createNode = (col, row) => {\n        return {\n            col,\n            row,\n        };\n    };\n    \n    create_memo(){\n        \n        const memo1 = []\n        for (let r = 0;r<this.props.string_1.length+1;r++){\n            memo1.push(Array(this.props.string_2.length+1).fill(0));\n        }\n        console.log('before',memo1)\n        for (let r = 0;r<this.props.string_1.length+1;r++){\n            console.log('internal',memo1);\n            for (let c = 0;c<this.props.string_2.length+1;c++){\n                if(r===0||c===0){\n                    memo1[r][c]=0;\n                    continue;\n                }\n                if(this.props.string_1[r-1]===this.props.string_2[c-1]){\n                    memo1[r][c]=1+memo1[r-1][c-1];\n                }\n                else{\n                    memo1[r][c]=Math.max(memo1[r][c-1],memo1[r-1][c]);\n                }\n            }\n        }\n\n        return memo1;\n    };\n\n    \n\n    reseter(){\n        console.log('here');\n        for (let i = 2; i < this.state.grid.length; i++) {\n            for(let k=2;k<this.state.grid[0].length;k++){\n            \n              document.getElementById(`node-${i}-${k}`).style.color='white' ;\n            }\n        }\n    }\n    update_speed(e){\n      e.preventDefault();\n      this.setState({\n        speed:e.target.value,\n      })\n    }\n    render() {\n        let s = `if(string_1[r-1]==string_2[c-1])\\{\n\n     memo1[r][c]=1+memo1[r-1][c-1];\n\n \\}`\n        let j = ` else\\{\n\n     memo1[r][c]=max(memo1[r-1][c],memo1[r][c-1]);\n\n \\}`\n  let compy=(<div></div>);\n  if(!this.state.visualizing){\n  compy= (<div style={{marginLeft:'17%'}}>\n             <label style={{marginLeft:'3.5%'}}>Memo-fill-speed: </label>\n             <select style={{marginLeft:'0%'}}onChange={this.update_speed}>\n              <option value=\"slow\">slow</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"fast\">fast</option>\n             </select>\n              <button onClick={() => this.animateDijkstra()} style={{marginLeft:'0%',marginTop:'1%'}}>\n                Visualize LCS memo\n              </button>\n              <button onClick={() => this.reseter()} style={{marginLeft:'0%',marginTop:'2%'}}>\n                reset REM memo\n              </button>\n              </div>)\n  }\n        return (\n            <div>\n              {compy}\n              <div className=\"grid\">\n                {this.state.grid.map((row, rowIdx) => {\n                  return (\n                    <div key={rowIdx}>\n                      {row.map((node, nodeIdx) => {\n                        //const {rower, col} = node;\n                        const rower = node.row;\n                        const col = node.col;\n                        let val='-';\n                        let type='';\n                        if(rower===0 && col>1){\n                            val=this.props.string_2[col-2]\n                            type='show_string'\n                        }\n                        else if(rower>1 && col===0){\n                            val=this.props.string_1[rower-2]\n                            type='show_string'\n                        }\n                        else if(rower>0&&col>0){\n                            if(rower==1||col==1){\n                                type='show'\n                            }\n                            else{\n                                type='dont_show'\n                            }\n                            val=String(this.state.memo[rower-1][col-1]);\n                        }\n                        return (\n                          <Lcs_Square\n                            key={nodeIdx}\n                            row={rower}\n                            col={col}\n                            val={val}\n                            typey={type}\n                            >\n                        </Lcs_Square>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{height:'250px', width:'400px', type:'relative', float:'left',marginLeft:'5%',marginTop:'2.2%'}} >\n              <div id='1234' class='if_statement_1' style={{marginTop:'0%'}} >\n                <pre> {s}</pre>\n              </div>\n              <div id='5678' class='if_statement_2' style={{marginTop:'8.5%'}}>\n                <pre>{j}</pre>\n              </div>\n              </div>\n            </div>\n          );      \n\n    }\n\n\n}\n\n\nexport default Lcs_Memo;","import React from 'react';\nimport Lcs_Memo from './memo'\n\n\nclass lcs_Form extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            string_1:'',\n            string_2:'',\n            submitted:false,\n        }\n        this.change_handler1 = this.change_handler1.bind(this);\n        this.change_handler2 = this.change_handler2.bind(this);\n        this.handle_submit=this.handle_submit.bind(this);\n    }\n\nchange_handler1(event) {\n    this.setState({\n        string_1: event.target.value,\n        submitted:false,\n    });\n\n}\n\nchange_handler2(event) {\n    this.setState({\n        string_2: event.target.value,\n        submitted:false,\n    });\n}\nhandle_submit(e){\n    this.setState({\n        submitted:true,\n    })\n    e.preventDefault();\n}\nrender() {\n    let compy;\n    if(this.state.submitted){\n        compy=(\n            <div>\n            <p style={{fontWeight: 'bold',fontSize:'20px'}}>string 1 is {this.state.string_1}</p>\n            <p style={{fontWeight: 'bold',fontSize:'20px'}}>string 2 is {this.state.string_2}</p>\n            <Lcs_Memo string_1={this.state.string_1} string_2={this.state.string_2}></Lcs_Memo>\n            </div>\n        );\n    }\n    else{\n        compy = (<div></div>);\n    }\n    return (\n    <div>\n       <p><h2>Please enter both of your (non-empty) strings </h2>(Limit to 10 characters)</p>\n        <form onSubmit={this.handle_submit}>\n            <p><label>String 1 <input type='text' name='s1' value={this.state.string_1} onChange={this.change_handler1}></input></label></p>\n             <p><label>String 2 <input type='text' name='s2' value={this.state.string_2} onChange={this.change_handler2}></input></label></p>\n             <input type='submit' value='submit' ></input>\n        </form>\n        {compy}\n        <div></div>\n    </div>\n    );\n}\n\n\n}\n\nexport default lcs_Form;","import React from 'react';\nclass Rem_Square extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let typer;\n        let id = `node-${this.props.row}-${this.props.col}`\n        if(this.props.typey==='show'){\n            typer={color:'black'};\n        }\n        else if(this.props.typey==='show_string'){\n            typer={color:'black',fontWeight:'bold'};\n        }\n        else{\n            typer={color:'white',};\n        }\n        return (\n            <div id={id} className='node' style={typer}> {this.props.val} </div>\n        )\n    }\n}\n\nexport default Rem_Square;","import React from 'react';\nimport Rem_Square from './Square'\nclass Rem_Memo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            num_rows:this.props.string_1.length+2,\n            num_cols:this.props.string_2.length+2,\n            memo:this.create_memo(),\n            grid:this.getInitialGrid(),\n            speed:'slow',\n            visualizing:false,\n        }\n        this.update_speed=this.update_speed.bind(this);\n    }\n\n    animateDijkstra() {\n        var increment=1200;\n        var lag=700;\n        console.log(this.state.speed)\n        if(this.state.speed==='slow'){\n          console.log('slow')\n        }\n        else if(this.state.speed==='medium'){\n          increment=500;\n          lag=275;\n        }\n        else if(this.state.speed==='fast'){\n          increment=350;\n          lag=120;\n        }\n        console.log('increment ',increment,' lag ',lag)\n        let counter=1;\n        this.setState({visualizing:true});\n\n        for (let i = 2; i < this.state.grid.length; i++) {\n          for(let k=2;k<this.state.grid[0].length;k++){\n            \n            if(this.props.string_1[i-2]==this.props.string_2[k-2]||this.props.string_2[k-2]=='.'){\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node node-dev';\n                    document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                    document.getElementById(`node-${0}-${k}`).className ='node node-prev';\n                    document.getElementById(`node-${i}-${0}`).className ='node node-prev';\n                    document.getElementById('1234').className ='if_statement_1_alt';\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node';\n                    document.getElementById(`node-${0}-${k}`).className ='node';\n                    document.getElementById(`node-${i}-${0}`).className ='node';\n                    document.getElementById('1234').className ='if_statement_1';\n                }, (increment*counter + lag));\n            }\n            else if(this.props.string_2[k-2]==='*'){\n              if(this.props.string_2[k-3]===this.props.string_1[i-2]||this.props.string_2[k-3]==='.'){\n                setTimeout(() => {\n                  document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                  document.getElementById(`node-${i-1}-${k}`).className ='node node-start';\n                  document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                  document.getElementById(`node-${0}-${k}`).className ='node node-prev';\n                  document.getElementById(`node-${0}-${k-1}`).className ='node node-dev';\n                  document.getElementById(`node-${i}-${0}`).className ='node node-dev';\n                  document.getElementById('5678').className ='if_statement_2_alt';\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                    document.getElementById(`node-${i-1}-${k}`).className ='node';\n                    document.getElementById(`node-${i}-${0}`).className ='node';\n                    document.getElementById(`node-${0}-${k}`).className ='node';\n                    document.getElementById(`node-${0}-${k-1}`).className ='node';\n                    document.getElementById('5678').className ='if_statement_2';\n                }, (increment*counter + lag));\n              }\n              else{\n                setTimeout(() => {\n                  document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                  document.getElementById(`node-${i}-${k-2}`).className ='node node-start';\n                  document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                  document.getElementById(`node-${0}-${k}`).className ='node node-prev';\n                  document.getElementById('5678').className ='if_statement_2_alt';\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                    document.getElementById(`node-${i}-${k-2}`).className ='node';\n                    document.getElementById(`node-${0}-${k}`).className ='node';\n                    document.getElementById('5678').className ='if_statement_2';\n                }, (increment*counter + lag));\n              }\n            }\n            else {\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                    document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                }, (increment*counter + lag));\n                \n            }\n            if(k==this.state.grid[0].length-1 && i == this.state.grid.length-1){\n              setTimeout(()=>{this.setState({visualizing:false,speed:'slow'})},increment*counter + lag);\n            }\n            counter++;\n          }\n        }\n    }\n\n    getInitialGrid = () => {\n        const gridy = [];\n        for (let row = 0; row < this.props.string_1.length+2; row++) {\n          const currentRow = [];\n          for (let col = 0; col < this.props.string_2.length+2; col++) {\n            currentRow.push(this.createNode(col, row));\n          }\n          gridy.push(currentRow);\n        }\n        return gridy;\n    };\n      \n    createNode = (col, row) => {\n        return {\n            col,\n            row,\n        };\n    };\n    \n    create_memo(){\n        \n        const memo1 = []\n        for (let r = 0;r<this.props.string_1.length+1;r++){\n          memo1.push(Array(this.props.string_2.length+1).fill(false));\n        }\n        console.log('before',memo1)\n        \n        memo1[0][0]=true;\n        for(let i=1;i<memo1[0].size;i++){\n          if(this.props.string_2[i-1]==='*'&&memo1[0][i-2]){\n              memo1[0][i]=true;\n          }\n        }\n        \n\n        for (let r = 1;r<this.props.string_1.length+1;r++){\n          console.log('internal',memo1);\n          for (let c = 1;c<this.props.string_2.length+1;c++){\n            if(this.props.string_1[r-1]==this.props.string_2[c-1]||this.props.string_2[c-1]=='.'){\n              memo1[r][c]=memo1[r-1][c-1];\n            }\n              \n            else if(this.props.string_2[c-1]==='*'){\n              if(this.props.string_2[c-2]===this.props.string_1[r-1]||this.props.string_2[c-2]==='.'){\n                  memo1[r][c]=memo1[r-1][c];\n              }\n              memo1[r][c]=memo1[r][c]||memo1[r][c-2];\n            }\n          }\n        }\n\n        return memo1;\n    };\n\n    \n\n    reseter(){\n        console.log('here');\n        for (let i = 2; i < this.state.grid.length; i++) {\n            for(let k=2;k<this.state.grid[0].length;k++){\n            \n              document.getElementById(`node-${i}-${k}`).style.color='white' ;\n            }\n        }\n    }\n    update_speed(e){\n      e.preventDefault();\n      this.setState({\n        speed:e.target.value,\n      })\n    }\n    render() {\n        let s = `if(string[r-1]==pattern[c-1]||pattern[c-1]=='.'){\n   memo[r][c] = memo[r-1][c-1];\n }`\n        let j = ` else if(this.props.string_2[c-1]==='*'){\n\n   if(pattern[c-2]==string[r-1]||pattern[c-2]=='.'){\n       memo1[r][c] = memo1[r-1][c];\n   }\n\n   memo1[r][c] = memo1[r][c]||memo1[r][c-2];\n }`\n  let compy=(<div></div>);\n  if(!this.state.visualizing){\n  compy= (<div style={{marginLeft:'17%'}}><label style={{marginLeft:'3.7%'}}>Memo-fill-speed: </label>\n             <select style={{marginLeft:'0%'}}onChange={this.update_speed}>\n              <option value=\"slow\">slow</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"fast\">fast</option>\n             </select>\n              <button onClick={() => this.animateDijkstra()} style={{marginLeft:'0%',marginTop:'1%'}}>\n                Visualize REM memo\n              </button>\n              <button onClick={() => this.reseter()} style={{marginLeft:'0%',marginTop:'2%'}}>\n                reset REM memo\n              </button></div>)\n  }\n        return (\n            <div>\n              {compy}\n              <div className=\"grid\">\n                {this.state.grid.map((row, rowIdx) => {\n                  return (\n                    <div key={rowIdx}>\n                      {row.map((node, nodeIdx) => {\n                        //const {rower, col} = node;\n                        const rower = node.row;\n                        const col = node.col;\n                        let val='-';\n                        let type='';\n                        if(rower===0 && col>1){\n                            val=this.props.string_2[col-2]\n                            type='show_string'\n                        }\n                        else if(rower>1 && col===0){\n                            val=this.props.string_1[rower-2]\n                            type='show_string'\n                        }\n                        else if(rower>0&&col>0){\n                            if(rower==1||col==1){\n                                type='show'\n                            }\n                            else{\n                                type='dont_show'\n                            }\n                            val=String(this.state.memo[rower-1][col-1]);\n                        }\n                        return (\n                          <Rem_Square\n                            key={nodeIdx}\n                            row={rower}\n                            col={col}\n                            val={val}\n                            typey={type}\n                            >\n                        </Rem_Square>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{height:'250px', width:'415px', type:'relative', float:'left',marginLeft:'5%',marginTop:'2.1%'}} >\n              <div id='1234' class='if_statement_1' style={{width:'415px'}}>\n                <pre> {s}</pre>\n              </div>\n              <div id='5678' class='if_statement_2' style={{marginTop:'6.7%',width:'415px'}} >\n                <pre>{j}</pre>\n              </div>\n              </div>\n            </div>\n          );      \n\n    }\n\n\n}\n\n\nexport default Rem_Memo;","import React from 'react';\nimport Rem_Memo from './memo'\n\n\nclass Rem_Form extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            string_1:'',\n            string_2:'',\n            submitted:false,\n        }\n        this.change_handler1 = this.change_handler1.bind(this);\n        this.change_handler2 = this.change_handler2.bind(this);\n        this.handle_submit=this.handle_submit.bind(this);\n    }\n\nchange_handler1(event) {\n    this.setState({\n        string_1: event.target.value,\n        submitted:false,\n    });\n\n}\n\nchange_handler2(event) {\n    this.setState({\n        string_2: event.target.value,\n        submitted:false,\n    });\n}\nhandle_submit(e){\n    this.setState({\n        submitted:true,\n    })\n    e.preventDefault();\n}\nrender() {\n    let compy;\n    if(this.state.submitted){\n        compy=(\n            <div>\n            <p style={{fontWeight: 'bold',fontSize:'20px'}}>string  is {this.state.string_1}</p>\n            <p style={{fontWeight: 'bold',fontSize:'20px'}}>pattern is {this.state.string_2}</p>\n            <Rem_Memo string_1={this.state.string_1} string_2={this.state.string_2}></Rem_Memo>\n            </div>\n        );\n    }\n    else{\n        compy = (<div></div>);\n    }\n    return (\n    <div>\n       <p><h2>Please enter your (non-empty) string and pattern</h2>(Limit to 10 characters)</p>\n        <form onSubmit={this.handle_submit}>\n            <p><label>String   <input type='text' name='s1' value={this.state.string_1} onChange={this.change_handler1}></input></label></p>\n             <p><label>Pattern <input type='text' name='s2' value={this.state.string_2} onChange={this.change_handler2}></input></label></p>\n             <input type='submit' value='submit' ></input>\n        </form>\n        {compy}\n        <div></div>\n    </div>\n    );\n}\n\n\n}\n\nexport default Rem_Form;","import React from 'react';\nclass Ed_Square extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let typer;\n        let id = `node-${this.props.row}-${this.props.col}`\n        if(this.props.typey==='show'){\n            typer={color:'black'};\n        }\n        else if(this.props.typey==='show_string'){\n            typer={color:'black',fontWeight:'bold'};\n        }\n        else{\n            typer={color:'white',};\n        }\n        return (\n            <div id={id} className='node' style={typer}> {this.props.val} </div>\n        )\n    }\n}\n\nexport default Ed_Square;","import React from 'react';\nimport Ed_Square from './Square'\nclass Ed_Memo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            num_rows:this.props.string_1.length+2,\n            num_cols:this.props.string_2.length+2,\n            memo:this.create_memo(),\n            grid:this.getInitialGrid(),\n            speed:'slow',\n            visualizing:false,\n        }\n        this.update_speed=this.update_speed.bind(this);\n    }\n\n    animateDijkstra() {\n        var increment=800;\n        var lag=550;\n        console.log(this.state.speed)\n        if(this.state.speed==='slow'){\n          console.log('slow')\n        }\n        else if(this.state.speed==='medium'){\n          increment=500;\n          lag=275;\n        }\n        else if(this.state.speed==='fast'){\n          increment=350;\n          lag=120;\n        }\n        console.log('increment ',increment,' lag ',lag)\n        let counter=1;\n        this.setState({visualizing:true});\n        for (let i = 2; i < this.state.grid.length; i++) {\n          for(let k=2;k<this.state.grid[0].length;k++){\n            \n            if(this.props.string_1[i-2]==this.props.string_2[k-2]){\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node node-dev';\n                    document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                    document.getElementById(`node-${0}-${k}`).className ='node node-prev';\n                    document.getElementById(`node-${i}-${0}`).className ='node node-prev';\n                    document.getElementById('1234').className ='if_statement_1_alt';\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node';\n                    document.getElementById(`node-${0}-${k}`).className ='node';\n                    document.getElementById(`node-${i}-${0}`).className ='node';\n                    document.getElementById('1234').className ='if_statement_1';\n                }, (increment*counter + lag));\n                \n            }\n            else{\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node node-finish';\n                    document.getElementById(`node-${i-1}-${k}`).className ='node node-start';\n                    document.getElementById(`node-${i}-${k-1}`).className ='node node-start';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node node-start';\n                    document.getElementById(`node-${i}-${k}`).style ={color:'black',};\n                    document.getElementById('5678').className ='if_statement_2_alt';\n                }, (increment*counter));\n                setTimeout(() => {\n                    document.getElementById(`node-${i}-${k}`).className ='node';\n                    document.getElementById(`node-${i-1}-${k}`).className ='node';\n                    document.getElementById(`node-${i}-${k-1}`).className ='node';\n                    document.getElementById(`node-${i-1}-${k-1}`).className ='node';\n                    document.getElementById('5678').className ='if_statement_2';\n                }, (increment*counter + lag));\n            }\n            if(k==this.state.grid[0].length-1 && i == this.state.grid.length-1){\n              setTimeout(()=>{this.setState({visualizing:false,speed:'slow'})},increment*counter + lag);\n            }\n            counter++;\n          }\n        }\n    }\n\n    getInitialGrid = () => {\n        const gridy = [];\n        for (let row = 0; row < this.props.string_1.length+2; row++) {\n          const currentRow = [];\n          for (let col = 0; col < this.props.string_2.length+2; col++) {\n            currentRow.push(this.createNode(col, row));\n          }\n          gridy.push(currentRow);\n        }\n        return gridy;\n    };\n      \n    createNode = (col, row) => {\n        return {\n            col,\n            row,\n        };\n    };\n    \n    create_memo(){\n        \n        const memo1 = []\n        for (let r = 0;r<this.props.string_1.length+1;r++){\n            memo1.push(Array(this.props.string_2.length+1).fill(0));\n        }\n        console.log('before',memo1)\n        for (let r = 0;r<this.props.string_1.length+1;r++){\n            console.log('internal',memo1);\n            for (let c = 0;c<this.props.string_2.length+1;c++){\n                if(r===0||c===0){\n                    memo1[r][c]=Math.max(r,c);\n                    continue;\n                }\n                if(this.props.string_1[r-1]===this.props.string_2[c-1]){\n                  memo1[r][c]=memo1[r-1][c-1];\n                }\n                else{\n                  memo1[r][c]=1+Math.min(memo1[r][c-1],Math.min(memo1[r-1][c],memo1[r-1][c-1]));\n                }\n            }\n        }\n\n        return memo1;\n    };\n\n    \n\n    reseter(){\n        console.log('here');\n        for (let i = 2; i < this.state.grid.length; i++) {\n            for(let k=2;k<this.state.grid[0].length;k++){\n            \n              document.getElementById(`node-${i}-${k}`).style.color='white' ;\n            }\n        }\n    }\n    update_speed(e){\n      e.preventDefault();\n      this.setState({\n        speed:e.target.value,\n      })\n    }\n    render() {\n        let s = `if(string_1[r-1]==string_2[c-1])\\{\n\n     memo1[r][c]=memo1[r-1][c-1];\n\n \\}`\n        let j = ` else\\{\n\n     int first_min = min(memo1[r][c-1],memo[r-1][c-1]);\n     memo1[r][c]= 1 + min(memo1[r-1][c],first_min);\n\n \\}`\n let compy=(<div></div>);\n  if(!this.state.visualizing){\n  compy= (<div style={{marginLeft:'17%'}}>\n            <label style={{marginLeft:'3.7%'}}>Memo-fill-speed: </label>\n             <select style={{marginLeft:'1%'}}onChange={this.update_speed}>\n              <option value=\"slow\">slow</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"fast\">fast</option>\n             </select>\n              <button onClick={() => this.animateDijkstra()} style={{marginLeft:'0%',marginTop:'1%'}}>\n                Visualize Edit-Distance memo\n              </button>\n              <button onClick={() => this.reseter()} style={{marginLeft:'0%',marginTop:'2%'}}>\n                reset memo\n              </button>\n              </div>)\n  }\n        return (\n            <div>\n              {compy}\n              <div className=\"grid\">\n                {this.state.grid.map((row, rowIdx) => {\n                  return (\n                    <div key={rowIdx}>\n                      {row.map((node, nodeIdx) => {\n                        //const {rower, col} = node;\n                        const rower = node.row;\n                        const col = node.col;\n                        let val='-';\n                        let type='';\n                        if(rower===0 && col>1){\n                            val=this.props.string_2[col-2]\n                            type='show_string'\n                        }\n                        else if(rower>1 && col===0){\n                            val=this.props.string_1[rower-2]\n                            type='show_string'\n                        }\n                        else if(rower>0&&col>0){\n                            if(rower==1||col==1){\n                                type='show'\n                            }\n                            else{\n                                type='dont_show'\n                            }\n                            val=String(this.state.memo[rower-1][col-1]);\n                        }\n                        return (\n                          <Ed_Square\n                            key={nodeIdx}\n                            row={rower}\n                            col={col}\n                            val={val}\n                            typey={type}\n                            >\n                        </Ed_Square>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{height:'250px', width:'450px', type:'relative', float:'left',marginLeft:'5%',marginTop:'2.5%'}} >\n              <div id='1234' class='if_statement_1' style={{width:'450px'}} >\n                <pre> {s}</pre>\n              </div>\n              <div id='5678' class='if_statement_2' style={{width:'450px',marginTop:'8.5%'}}>\n                <pre>{j}</pre>\n              </div>\n              </div>\n            </div>\n          );      \n\n    }\n\n\n}\n\n\nexport default Ed_Memo;","import React from 'react';\nimport Ed_Memo from './memo'\n\n\nclass Ed_Form extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            string_1:'',\n            string_2:'',\n            submitted:false,\n        }\n        this.change_handler1 = this.change_handler1.bind(this);\n        this.change_handler2 = this.change_handler2.bind(this);\n        this.handle_submit=this.handle_submit.bind(this);\n    }\n\nchange_handler1(event) {\n    this.setState({\n        string_1: event.target.value,\n        submitted:false,\n    });\n\n}\n\nchange_handler2(event) {\n    this.setState({\n        string_2: event.target.value,\n        submitted:false,\n    });\n}\nhandle_submit(e){\n    this.setState({\n        submitted:true,\n    })\n    e.preventDefault();\n}\nrender() {\n    let compy;\n    if(this.state.submitted){\n        compy=(\n            <div>\n            <p style={{fontWeight: 'bold',fontSize:'20px'}}>Input string is {this.state.string_1}</p>\n            <p style={{fontWeight: 'bold',fontSize:'20px'}}>Target string is {this.state.string_2}</p>\n            <Ed_Memo string_1={this.state.string_1} string_2={this.state.string_2}></Ed_Memo>\n            </div>\n        );\n    }\n    else{\n        compy = (<div></div>);\n    }\n    return (\n    <div>\n        <p><h2>Please enter both of your (non-empty) strings</h2>(Limit to 10 characters)</p>\n        <form onSubmit={this.handle_submit}>\n            <p><label>Input String <input type='text' name='s1' value={this.state.string_1} onChange={this.change_handler1}></input></label></p>\n             <p><label>Target String <input type='text' name='s2' value={this.state.string_2} onChange={this.change_handler2}></input></label></p>\n             <input type='submit' value='submit' ></input>\n        </form>\n        {compy}\n        <div></div>\n    </div>\n    );\n}\n\n\n}\n\nexport default Ed_Form;","import React from 'react';\nimport Lcs_Form from './lcs/form'\nimport Rem_Form from './REM/form'\nimport Ed_Form from './Ed/form'\nclass Multiform extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            algorithm:'Longest Common Subsequence',\n        }\n        this.change_handler1 = this.change_handler1.bind(this);\n    }\n\nchange_handler1(event) {\n    this.setState({\n        algorithm: event.target.value,\n    });\n\n}\n\n\nrender() {\n    let compy;\n    if(this.state.algorithm==='Longest Common Subsequence'){\n        compy=(\n            <div>\n            <h2><p>We will visualise the Longest common Subsequence problem</p></h2>\n            <a href='https://leetcode.com/problems/longest-common-subsequence/' target=\"_blank\">Problem statement (leetcode)</a>\n            <Lcs_Form></Lcs_Form>\n            </div>\n        );\n    }\n    else if(this.state.algorithm==='Regular Expression Matching'){\n        compy=(\n            <div>\n            <h2><p>We will visualise the Regular Expression Matching problem</p></h2>\n            <a href='https://leetcode.com/problems/regular-expression-matching/' target=\"_blank\">Problem statement (leetcode)</a>\n            <Rem_Form></Rem_Form>\n            </div>\n        );\n    }\n    else{\n        compy=(\n        <div>\n            <h2><p>We will visualise the Edit-Distance problem</p></h2>\n            <a href='https://leetcode.com/problems/edit-distance/' target=\"_blank\">Problem statement (leetcode)</a>\n            <Ed_Form></Ed_Form>\n        </div>\n        )\n        \n    }\n    return (\n    \n    <div>\n        <label >Select your DP problem: </label>\n        <select onChange={this.change_handler1}>\n            <option value=\"Longest Common Subsequence\">Longest Common Subsequence</option>\n            <option value=\"Edit Distance\">Edit distance</option>\n            <option value=\"Regular Expression Matching\">Regular Expression Matching</option>\n        </select>\n        {compy}\n    </div>\n    \n    );\n}\n\n\n}\n\nexport default Multiform;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Multiform from './multiform';\nimport './index.css';\n\nReactDOM.render(\n  // Insert the post component into the DOM\n  <Multiform />,\n  document.getElementById('reactEntry'),\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}